[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "TagBot.jl",
    "section": "",
    "text": "üè∑Ô∏èü§ñ Automated Package Releases in Julia\nA minimum-viable TagBot implementation in Julia!\nThis project is being actively developed! It works in local testing, and will be made more robust in 2025.",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Overview</span>"
    ]
  },
  {
    "objectID": "index.html#installation",
    "href": "index.html#installation",
    "title": "TagBot.jl",
    "section": "Installation",
    "text": "Installation\nChoose one of the following lines below.\njulia&gt; import Pkg; Pkg.add(\"https://github.com/cadojo/TagBot.jl\")\npkg&gt; add https://github.com/cadojo/TagBot.jl",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Overview</span>"
    ]
  },
  {
    "objectID": "index.html#usage",
    "href": "index.html#usage",
    "title": "TagBot.jl",
    "section": "Usage",
    "text": "Usage\nA minimum working example.\nThis package can use the GitHub API to query Julia‚Äôs General Registry for a package version‚Äôs PR, and then create a corresponding GitHub release. To do this, you‚Äôll need to authenticate with the GitHub API. The simplest way is to install the GitHub CLI and authenticate with the following command: gh auth login. The GitHub CLI prompts will guide you through the one-time authentication process. Once you‚Äôve authenticated the CLI, you can execute the code below to authenticate with the API.\nimport GitHub \nauth = GitHub.authenticate(readchomp(`gh auth token`))\nWith this authentication, you can use TagBot to query Git commits for each registered package version, find registered versions without tags, and create tags for all un-tagged registered package versions.\nimport TagBot\n\npackage = \"\" # some package you own\nTagBot.create_releases(package; auth = auth)",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Overview</span>"
    ]
  },
  {
    "objectID": "api/index.html",
    "href": "api/index.html",
    "title": "Reference",
    "section": "",
    "text": "untagged_versions\nDocstrings for TagBot.",
    "crumbs": [
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Reference</span>"
    ]
  },
  {
    "objectID": "api/index.html#untagged_versions",
    "href": "api/index.html#untagged_versions",
    "title": "Reference",
    "section": "",
    "text": "untagged_versions(package; registry, kwargs...)\nGiven a package name, return all registered versions which are not yet released.",
    "crumbs": [
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Reference</span>"
    ]
  },
  {
    "objectID": "api/index.html#create_release",
    "href": "api/index.html#create_release",
    "title": "Reference",
    "section": "create_release",
    "text": "create_release\n\n\n\n\n\n\nNo documentation found.\nTagBot.create_release is a Function.\n# 1 method for generic function \"create_release\" from TagBot:\n [1] create_release(package::AbstractString, version; prefix, kwargs...)\n     @ ~/work/ExperimentalTagBot.jl/ExperimentalTagBot.jl/src/TagBot.jl:303",
    "crumbs": [
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Reference</span>"
    ]
  },
  {
    "objectID": "api/index.html#create_releases",
    "href": "api/index.html#create_releases",
    "title": "Reference",
    "section": "create_releases",
    "text": "create_releases\n\n\n\n\n\n\nNo documentation found.\nTagBot.create_releases is a Function.\n# 1 method for generic function \"create_releases\" from TagBot:\n [1] create_releases(package::AbstractString; prefix, registry, kwargs...)\n     @ ~/work/ExperimentalTagBot.jl/ExperimentalTagBot.jl/src/TagBot.jl:334",
    "crumbs": [
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Reference</span>"
    ]
  }
]